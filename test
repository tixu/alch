func createIncident(client *cachet.Client, IncidentName string, IncidentMessage string, ComponentId int, ComponentStatus int, IncidentStatus int) {
	i := &cachet.Incident{
		Name:            IncidentName,
		Message:         IncidentMessage,
		ComponentID:     ComponentId,
		ComponentStatus: ComponentStatus,
		Status:          IncidentStatus,
		Visible:         cachet.IncidentVisibilityPublic,
	}
	fmt.Printf("incident %v", i)
	i, resp, err := client.Incidents.Create(i)
	if err != nil {
		fmt.Printf("Status: %s\n", resp.Status)
		fmt.Printf("incidents %v\n", i)
	}

}

func createComponent(client *cachet.Client, name string) {

	component := &cachet.Component{
		Name:        name,
		Description: "Description",
		Status:      cachet.ComponentStatusOperational,
	}
	component, resp, _ := client.Components.Create(component)
	fmt.Printf("Status: %s\n", resp.Status)
	fmt.Printf("Component %v\n", component)
}

func createGroup(client *cachet.Client, name string) {

	group := &cachet.ComponentGroup{
		Name: name,
	}
	component, resp, _ := client.ComponentGroups.Create(group)
	fmt.Printf("Status: %s\n", resp.Status)
	fmt.Printf("Component %v\n", component)
}
